name: build
run-name: build was executed by ${{ github.actor }}

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-22.04
    outputs:
      is_frontend: ${{ steps.filter.outputs.is_frontend }}
      is_backend: ${{ steps.filter.outputs.is_backend }}
      is_openapi: ${{ steps.filter.outputs.is_openapi }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            is_frontend: 
              - 'packages/frontend/**'
            is_backend:
              - 'packages/backend/**'
            is_openapi:
              - 'packages/shared/openapi/**'

  build_frontend:
    needs: changes
    if: ${{ needs.changes.outputs.is_frontend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: packages/frontend
    steps:
      # リポジトリをチェックアウト
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # pnpm 8をインストール
      - uses: pnpm/action-setup@v2
        with:
          version: 9

      # node.jsをインストール
      - name: Node.js
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: packages/frontend/

      # 依存関係先をインストール
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      #  単体テスト
      - name: vitest
        run: pnpm test:ci

      # lint
      - name: lint
        run: pnpm lint:ci

      # ビルドチェック
      - name: build check
        run: pnpm build

      #  コンポーネントカタログをビルド
      - name: catalog build
        run: pnpm ladle:ci

  visual-regression-testing:
    needs: changes
    if: ${{ needs.changes.outputs.is_frontend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: packages/frontend
    steps:
      # リポジトリをチェックアウト
      - uses: actions/checkout@v3
      # TODO: github action 内のdocker build でキャッシュしたい https://github.com/stlatica/stlatica/issues/286
      - name: pull lfs snapshots
        run: git lfs pull
      - name: Run vrt tests in container
        run: make docker/vrt
        timeout-minutes: 2

  build_backend:
    needs: changes
    if: ${{ needs.changes.outputs.is_backend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: packages/backend
    steps:
      # リポジトリをチェックアウト
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      # setup go install
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20.6"
          cache: false
      # format
      - name: Run gofmt
        run: gofmt -w .
      # auto commit
      - name: auto commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "format code"
      # lint
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: packages/backend
      # TODO:Build
      # - name: Go build check
      #   run: |
      #     go build -v ./...

  lint_openapi:
    needs: changes
    if: ${{ needs.changes.outputs.is_openapi == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: packages/shared/openapi
    steps:
      # リポジトリをチェックアウト
      - uses: actions/checkout@v3
      # TODO: github action 内のdocker build でキャッシュしたい https://github.com/stlatica/stlatica/issues/286
      - name: build container image
        run: make docker-build
      - name: internal api lint
        run: make internal/lint
      - name: external api lint
        run: make external/lint
      - name: internal api bundle check
        run: make internal/bundle
      - name: external api bundle check
        run: make external/bundle
