/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/internal/v1/users/{user_id}": external["paths/users.yaml"]["users_{user_id}"];
  "/internal/v1/users/": external["paths/users.yaml"]["users"];
  "/internal/v1/plats/{plat_id}": external["paths/plats.yaml"]["plat_{plat_id}"];
  "/internal/v1/plats/{plat_id}/favorites": external["paths/plats.yaml"]["favorite_{plat_id}"];
  "/internal/v1/plats": external["paths/plats.yaml"]["plats"];
  "/internal/v1/timelines/{timeline_id}": external["paths/timelines.yaml"]["timelines_{timeline_id}"];
  "/internal/v1/timelines": external["paths/timelines.yaml"]["timelines"];
  "/internal/v1/images/{image_id}": external["paths/images.yaml"]["images_{image_id}"];
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    SampleUser: {
      /** @example sample_user */
      username: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export interface external {
  "parameters/plat_id.yaml": unknown;
  "parameters/timeline_id.yaml": unknown;
  "parameters/timeline_queries.yaml": unknown;
  "parameters/user_id.yaml": unknown;
  "paths/images.yaml": {
    "images_{image_id}": {
      /**
       * get image
       * @description get image \
       * base64形式で返される
       */
      get: operations["getImage"];
    };
  };
  "paths/plats.yaml": {
    "plat_{plat_id}": {
      /**
       * Get plat by ID.
       * @description Returns plat.
       */
      get: operations["getPlat"];
      /**
       * Delete plat by ID.
       * @description Delete plat.
       */
      delete: operations["deletePlat"];
    };
    plats: {
      /**
       * Post plat.
       * @description Post plat.
       */
      post: operations["postPlat"];
    };
    "favorite_{plat_id}": {
      /** Add "favorite" to a specific plat by ID. */
      post: {
        parameters: {
          path: {
            plat_id: external["parameters/plat_id.yaml"]["plat_id"];
          };
        };
      };
      /** Delete "favorite" to a specific plat by ID. */
      delete: {
        parameters: {
          path: {
            plat_id: external["parameters/plat_id.yaml"]["plat_id"];
          };
        };
      };
    };
  };
  "paths/timelines.yaml": {
    timelines: {
      /**
       * get timeline by query params
       * @description get timeline by query params \
       * 指定したクエリパラメータに一致するplatの配列を取得する
       */
      get: operations["getTimelineByQuery"];
    };
    "timelines_{timeline_id}": {
      /**
       * get timeline
       * @description get timeline \
       * plat idの降順でplatの配列を取得する
       */
      get: operations["getTimeline"];
    };
  };
  "paths/users.yaml": {
    "users_{user_id}": {
      /**
       * get user
       * @description get user
       */
      get: operations["getUser"];
      /**
       * Delete User by ID.
       * @description Delete User
       */
      delete: operations["deleteUser"];
    };
    users: {
      /**
       * Get users.
       * @description Get users.
       */
      get: operations["getUsers"];
      /**
       * Create new user.
       * @description Create new user.
       */
      post: operations["createUser"];
    };
  };
  "schemas/ErrorResponse.yaml": unknown;
  "schemas/Plat.yaml": unknown;
  "schemas/PlatID.yaml": unknown;
  "schemas/PlatPost.yaml": unknown;
  "schemas/User.yaml": unknown;
  "schemas/UserID.yaml": unknown;
}

export interface operations {

  /**
   * get image
   * @description get image \
   * base64形式で返される
   */
  getImage: {
    parameters: {
      path: {
        /**
         * @description 画像ID
         * @example image_id
         */
        image_id: string;
      };
    };
    responses: {
      /** @description success */
      200: {
        content: {
          "image/png": string;
          "image/jpeg": string;
          "image/gif": string;
        };
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unauthorized \
       * error code:
       * - 'UNAUTHORIZED'
       */
      401: {
        content: never;
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * Get plat by ID.
   * @description Returns plat.
   */
  getPlat: {
    parameters: {
      path: {
        plat_id: external["parameters/plat_id.yaml"]["plat_id"];
      };
    };
    responses: {
      /** @description success */
      200: {
        content: {
          "application/json": external["schemas/Plat.yaml"]["Plat"];
        };
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unauthorized \
       * error code:
       * - 'UNAUTHORIZED'
       */
      401: {
        content: never;
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * Delete plat by ID.
   * @description Delete plat.
   */
  deletePlat: {
    parameters: {
      path: {
        plat_id: external["parameters/plat_id.yaml"]["plat_id"];
      };
    };
    responses: {
      /** @description No content. */
      204: {
        content: never;
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unauthorized \
       * error code:
       * - 'UNAUTHORIZED'
       */
      401: {
        content: never;
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * Post plat.
   * @description Post plat.
   */
  postPlat: {
    /** @description 投稿内容 */
    requestBody?: {
      content: {
        "application/json": external["schemas/PlatPost.yaml"]["PlatPost"];
      };
    };
    responses: {
      /** @description Created. */
      201: {
        content: never;
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unauthorized \
       * error code:
       * - 'UNAUTHORIZED'
       */
      401: {
        content: never;
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * get timeline by query params
   * @description get timeline by query params \
   * 指定したクエリパラメータに一致するplatの配列を取得する
   */
  getTimelineByQuery: {
    parameters: {
      query: {
        user_id: external["parameters/timeline_queries.yaml"]["timeline_user_id"];
        type: external["parameters/timeline_queries.yaml"]["timeline_type"];
        limit?: external["parameters/timeline_queries.yaml"]["timeline_limit"];
        to_date?: external["parameters/timeline_queries.yaml"]["timeline_to_date"];
      };
    };
    responses: {
      /** @description success */
      200: {
        content: {
          "application/json": external["schemas/Plat.yaml"]["Plat"][];
        };
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unprocessable entity \
       * error code:
       * - 'INVALID_PARAMETER'
       */
      422: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * get timeline
   * @description get timeline \
   * plat idの降順でplatの配列を取得する
   */
  getTimeline: {
    parameters: {
      path: {
        timeline_id: external["parameters/timeline_id.yaml"]["timeline_id"];
      };
    };
    responses: {
      /** @description success */
      200: {
        content: {
          "application/json": external["schemas/Plat.yaml"]["Plat"][];
        };
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * get user
   * @description get user
   */
  getUser: {
    parameters: {
      path: {
        user_id: external["parameters/user_id.yaml"]["user_id"];
      };
    };
    responses: {
      /** @description success */
      200: {
        content: {
          "application/json": external["schemas/User.yaml"]["User"];
        };
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * Delete User by ID.
   * @description Delete User
   */
  deleteUser: {
    parameters: {
      path: {
        user_id: external["parameters/user_id.yaml"]["user_id"];
      };
    };
    responses: {
      /** @description No content. */
      204: {
        content: never;
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unauthorized \
       * error code:
       * - 'UNAUTHORIZED'
       */
      401: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * Get users.
   * @description Get users.
   */
  getUsers: {
    parameters: {
      query?: {
        /** @description ユーザ名 */
        user_name?: string;
      };
      path: {
        user_id: external["parameters/user_id.yaml"]["user_id"];
      };
    };
    responses: {
      /** @description success */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description unauthorized \
       * error code:
       * - 'UNAUTHORIZED'
       */
      401: {
        content: never;
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
  /**
   * Create new user.
   * @description Create new user.
   */
  createUser: {
    /** @description 新規ユーザーのユーザ名とメールアドレス */
    requestBody?: {
      content: {
        "application/json": {
          /** @example stlatica taro */
          name?: string;
          /** @example stlatica.taro@example.com */
          email?: string;
        };
      };
    };
    responses: {
      /**
       * @description bad request \
       * error code:
       * - 'BAD_REQUEST'
       * - 'MISSING_PARAMETER'
       */
      400: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description not found \
       * error code:
       * - 'NOT_FOUND'
       */
      404: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description user id conflict \
       * error code:
       * - 'CONFLICT'
       */
      409: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description user id or user name invalid \
       * error code:
       * - 'UNPROCESSABLE_ENTITY'
       */
      422: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description internal server error \
       * error code:
       * - 'INTERNAL_SERVER_ERROR'
       */
      500: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
      /**
       * @description service unavailable \
       * error code:
       * - 'SERVICE_UNAVAILABLE'
       */
      503: {
        content: {
          "application/json": external["schemas/ErrorResponse.yaml"]["ErrorResponse"];
        };
      };
    };
  };
}
