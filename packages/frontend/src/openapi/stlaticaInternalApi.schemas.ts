/**
 * Generated by orval v6.21.0 🍺
 * Do not edit manually.
 * stlatica_internal_api
 * stlatica internal api
 * OpenAPI spec version: 0.1.0
 */
/**
 * userを識別するための一意のID \
actor_idのfrontend向けエイリアスであり、actor_idと同一の値を持つ

 */
export type UserId = unknown;

/**
 * plat
 */
export interface PlatPost {
  /** platの本文 */
  content: string;
  user_id: UserId;
}

/**
 * platを識別するための一意のID

 */
export type PlatID = string;

/**
 * plat
 */
export interface Plat {
  /** platの本文 */
  content: string;
  plat_id: PlatID;
}

export type ErrorResponseCode = typeof ErrorResponseCode[keyof typeof ErrorResponseCode];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ErrorResponseCode = {
  BAD_REQUEST: 'BAD_REQUEST',
  MISSING_PARAMETER: 'MISSING_PARAMETER',
  UNAUTHORIZED: 'UNAUTHORIZED',
  NOT_FOUND: 'NOT_FOUND',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',
} as const;

export interface ErrorResponse {
  code: ErrorResponseCode;
  message: string;
}

/**
 * userを識別するための一意のID \
actor_idのfrontend向けエイリアスであり、actor_idと同一の値を持つ

 */
export type UserID = string;

/**
 * user
 */
export interface User {
  /** follower数 */
  followers_count: number;
  /** following数 */
  following_count: number;
  /** ユーザのアイコン画像のURL */
  icon: string;
  /** 公開アカウントであるかどうか \
external apiのmanuallyApprovesFollowersと同一の値となる
 */
  is_public: boolean;
  /** ユーザのプロフィール */
  summary: string;
  user_id: UserID;
  /** 画面上に表示されるユーザ名 */
  username: string;
}

export interface SampleUser {
  username: string;
}

