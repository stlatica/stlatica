{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/all",
    // import
    "plugin:import/recommended",
    "plugin:import/typescript",
    // typescript-eslintの設定解説→ https://zenn.dev/cybozu_frontend/articles/ts-eslint-v6-guide
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:promise/recommended",
    // prettierと競合するeslintの設定を除外する 末尾に入れておくこと
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "import",
    "@typescript-eslint",
    "eslint-plugin-jsdoc",
    "html",
    "promise",
    "unused-imports"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "paths": [
          "src"
        ],
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      },
      "typescript": {
        "project": "./tsconfig.json"
      }
    }
  },
  "overrides": [
    {
      "files": [
        "*/**/*.ts"
      ],
      "rules": {
        // .tsファイルではtsdocを必須に
        "jsdoc/require-jsdoc": [
          "warn",
          {
            "publicOnly": true,
            "require": {
              "ArrowFunctionExpression": true,
              "ClassDeclaration": true,
              "MethodDefinition": true
            },
            "checkConstructors": false
          }
        ]
      }
    },
    {
      // .tsxファイルではtsdocの制限を緩和
      "files": [
        "*/**/*.tsx"
      ],
      "rules": {
        "jsdoc/require-param": "off"
      }
    }
  ],
  "rules": {
    "no-constant-condition": "off",
    "max-len": [
      "off",
      {
        "code": 100
      }
    ],
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [
          ".jsx",
          ".tsx"
        ]
      }
    ],
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": [
          "/ <reference"
        ]
      }
    ],
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "variables": true,
        "functions": false,
        "classes": true,
        "typedefs": false
      }
    ],
    "import/prefer-default-export": [
      "off"
    ],
    // アロー関数を強制
    "func-style": [
      "error",
      "expression"
    ],
    // アロー関数はカッコ必須
    "arrow-parens": [
      "error",
      "always",
      {
        "requireForBlockBody": true
      }
    ],
    // "arrow-body-style": "off",
    // typescriptでimport解決されるので不要.
    "node/no-missing-import": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "react/function-component-definition": "off",
    "no-use-before-define": "off",
    "no-console": "off",
    "@typescript-eslint/interface-name-prefix": [
      "off"
    ],
    // interfaceを禁止
    "@typescript-eslint/consistent-type-definitions": [
      "error",
      "type"
    ],
    // 使った方が実装が遥かに容易になるシーンもあるのでwarn
    "no-await-in-loop": "warn",
    // コメントの書ける位置が制限される 1行目のコードに説明が書けないので不要
    "lines-around-comment": "off",
    // ts, tsxのみ拡張子なし その他は必須とする
    "import/extensions": [
      "error",
      "always",
      {
        "ts": "never",
        "tsx": "never",
        "js": "never",
        "jsx": "never"
      }
    ],
    // features, routesのimport禁止, 上に戻る相対パス禁止
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          "../",
          "features/*",
          "routes/*"
        ]
      }
    ],
    "jsx-a11y/alt-text": "off",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-floating-promises": "off",
    // react
    "react/self-closing-comp": "warn",
    // <div>Hoge</div> みたいなのをNGにしない
    "react/jsx-no-literals": "off",
    // JSXの深さ制限
    "react/jsx-max-depth": [
      "error",
      {
        "max": 5
      }
    ],
    // style, classnameなどのpropsを禁止する MUIと相性悪すぎるので一旦停止
    "react/forbid-component-props": "off",
    "react/jsx-no-useless-fragment": "off",
    "react/require-default-props": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": "off",
    "new-cap": "off",
    "arrow-body-style": [
      "error",
      "always"
    ],
    "comma-dangle": [
      "error",
      "only-multiline"
    ],
    "node/no-unpublished-import": "off",
    "no-undefined": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "src/**/*test.+(ts|tsx|js)"
        ],
        "peerDependencies": false
      }
    ],
    // https://github.com/sweepline/eslint-plugin-unused-imports
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "warn",
    "unused-imports/no-unused-vars": [
      "warn"
      // { "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
    ],
    // import order
    // https://zenn.dev/knowledgework/articles/0994f518015c04?redirected=1#import%E3%81%AE%E8%87%AA%E5%8B%95%E6%95%B4%E5%88%97%EF%BC%88import%2Forder%EF%BC%89
    "import/order": [
      "warn",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          [
            "parent",
            "sibling"
          ],
          "object",
          "type",
          "index"
        ],
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  },
  "ignorePatterns": [
    "*.png",
    "*.jpg",
    "*.config.js",
    "plop/*"
  ]
}