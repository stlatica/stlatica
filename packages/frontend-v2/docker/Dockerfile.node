FROM node:22.11.0-slim AS node
FROM node AS dev

WORKDIR /tmp/docker-builder

USER root

# RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh 

# ***** apt *****
# 開発に必要な依存関係類のインストール
RUN \
  --mount=type=cache,target=/var/lib/apt,sharing=locked \
  --mount=type=cache,target=/var/cache/apt,sharing=locked \
  apt-get update -y \
  && apt-get --no-install-recommends install -y \
  git make bash-completion less vim 
# x11-apps git-lfs language-pack-ja \


# apt install したもの類のセットアップを実行
# RUN git lfs install


RUN  npm install -g pnpm@9.14.3 \
  # for mac config 
  && pnpm config set store-dir /home/node/.pnpm-store

# ***** change general user *****
USER node

# git 操作に vscode を使うようにする
# この時点でオプションを追加するとdevcontainer のホスト側マウントが機能しなくなってしまうので、起動時コマンドの方で追加する
# RUN git config --global core.editor 'code --wait' \
#   && git config --global sequence.editor 'code --wait'

# ***** pnpm settings *****


# # ***** command alias *****
COPY ./docker/.alias .
RUN cat ./.alias >> ~/.bashrc

# ENV DEBUG=eslint:linter

WORKDIR /stlatica/packages/frontend-v2

EXPOSE 5173
EXPOSE 51204
EXPOSE 61000
EXPOSE 9323


# ******************************************
# * 以下本番用
# ******************************************
FROM ubuntu:24.04 AS ubuntu
FROM ubuntu AS ubuntu-node


# nodejs の実行バイナリを載せ替え
COPY --from=node /usr/local/include/ /usr/local/include/
COPY --from=node /usr/local/lib/ /usr/local/lib/
COPY --from=node /usr/local/bin/ /usr/local/bin/

USER ubuntu
RUN corepack enable npm pnpm



# ビルドコンテナ
FROM node AS builder

WORKDIR /builder

COPY ./pnpm-lock.yaml .
RUN pnpm fetch

COPY --chown=$USERNAME:$USERNAME . .
RUN pnpm install --frozen-lockfile \
  && corepack install \
  && pnpm build \
  && pnpm store prune

USER node

RUN corepack install 

ENTRYPOINT [ "pnpm", "start"]



# ビルドしたものを移し替えた、最小構成の実行コンテナ
FROM ubuntu-node AS prod

USER ubuntu
WORKDIR /stlatica

COPY ./pnpm-lock.yaml .
RUN pnpm fetch --production
COPY ./package.json ./

COPY --from=builder /builder/build ./build
RUN pnpm install --production --frozen-lockfile --offline && pnpm store prune

ENTRYPOINT [ "pnpm", "start"]