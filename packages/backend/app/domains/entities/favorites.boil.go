// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package entities

import (
	"github.com/stlatica/stlatica/packages/backend/app/domains/types"
)

// FavoriteBase is FavoriteBase entity object.
type FavoriteBase struct { // ulid
	PlatID types.PlatID `json:"plat_id"`
	// user_id
	UserID types.UserID `json:"user_id"`
	// Unix time
	CreatedAt types.UnixTime `json:"created_at"`

	R *FavoriteBaseR `json:"-"`
}

// FavoriteBaseR is where relationships are stored.
type FavoriteBaseR struct {
	Plat *PlatBase `json:"Plat"`
	User *UserBase `json:"User"`
}

// FavoriteBaseSlice is an alias for a slice of pointers to FavoriteBase.
// This should almost always be used instead of []FavoriteBase.
type FavoriteBaseSlice []*FavoriteBase

// GetPlatID is get plat_id value, if receiver is nil, returns the specified value.
func (m *FavoriteBase) GetPlatID() types.PlatID {
	if m == nil {
		return types.PlatID{}
	}
	return m.PlatID
}

// GetUserID is get user_id value, if receiver is nil, returns the specified value.
func (m *FavoriteBase) GetUserID() types.UserID {
	if m == nil {
		return types.UserID{}
	}
	return m.UserID
}

// GetCreatedAt is get created_at value, if receiver is nil, returns the specified value.
func (m *FavoriteBase) GetCreatedAt() types.UnixTime {
	if m == nil {
		return types.UnixTime(0)
	}
	return m.CreatedAt
}
