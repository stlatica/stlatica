// Code generated by SQLBoiler 4.15.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package entities

import (
	"github.com/stlatica/stlatica/packages/backend/app/domains/types"
)

// UserRelationBase is UserRelationBase entity object.
type UserRelationBase struct { // user_id of the followed side
	FollowUserID types.UserID `json:"follow_user_id"`
	// user_id of the follower side
	FollowerUserID types.UserID `json:"follower_user_id"`
	// Unix time
	CreatedAt types.UnixTime `json:"created_at"`
	// Unix time
	UpdatedAt types.UnixTime `json:"updated_at"`

	R *UserRelationBaseR `json:"-"`
}

// UserRelationBaseR is where relationships are stored.
type UserRelationBaseR struct {
	FollowUser   *UserBase `json:"FollowUser"`
	FollowerUser *UserBase `json:"FollowerUser"`
}

// UserRelationBaseSlice is an alias for a slice of pointers to UserRelationBase.
// This should almost always be used instead of []UserRelationBase.
type UserRelationBaseSlice []*UserRelationBase

// GetFollowUserID is get follow_user_id value, if receiver is nil, returns the specified value.
func (m *UserRelationBase) GetFollowUserID() types.UserID {
	if m == nil {
		return types.UserID{}
	}
	return m.FollowUserID
}

// GetFollowerUserID is get follower_user_id value, if receiver is nil, returns the specified value.
func (m *UserRelationBase) GetFollowerUserID() types.UserID {
	if m == nil {
		return types.UserID{}
	}
	return m.FollowerUserID
}

// GetCreatedAt is get created_at value, if receiver is nil, returns the specified value.
func (m *UserRelationBase) GetCreatedAt() types.UnixTime {
	if m == nil {
		return types.UnixTime(0)
	}
	return m.CreatedAt
}

// GetUpdatedAt is get updated_at value, if receiver is nil, returns the specified value.
func (m *UserRelationBase) GetUpdatedAt() types.UnixTime {
	if m == nil {
		return types.UnixTime(0)
	}
	return m.UpdatedAt
}
