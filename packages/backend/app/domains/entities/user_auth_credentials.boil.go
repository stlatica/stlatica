// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package entities

import (
	"github.com/stlatica/stlatica/packages/backend/app/domains/types"
)

// UserAuthCredentialBase is UserAuthCredentialBase entity object.
type UserAuthCredentialBase struct { // UserID
	UserID types.UserID `json:"user_id"`
	// Encrypted password
	EncryptedPassword string `json:"encrypted_password"`
	// Unix time
	CreatedAt types.UnixTime `json:"created_at"`
	// Unix time
	UpdatedAt types.UnixTime `json:"updated_at"`

	R *UserAuthCredentialBaseR `json:"-"`
}

// UserAuthCredentialBaseR is where relationships are stored.
type UserAuthCredentialBaseR struct {
	User *UserBase `json:"User"`
}

// UserAuthCredentialBaseSlice is an alias for a slice of pointers to UserAuthCredentialBase.
// This should almost always be used instead of []UserAuthCredentialBase.
type UserAuthCredentialBaseSlice []*UserAuthCredentialBase

// GetUserID is get user_id value, if receiver is nil, returns the specified value.
func (m *UserAuthCredentialBase) GetUserID() types.UserID {
	if m == nil {
		return types.UserID{}
	}
	return m.UserID
}

// GetEncryptedPassword is get encrypted_password value, if receiver is nil, returns the specified value.
func (m *UserAuthCredentialBase) GetEncryptedPassword() string {
	if m == nil {
		return ""
	}
	return m.EncryptedPassword
}

// GetCreatedAt is get created_at value, if receiver is nil, returns the specified value.
func (m *UserAuthCredentialBase) GetCreatedAt() types.UnixTime {
	if m == nil {
		return types.UnixTime(0)
	}
	return m.CreatedAt
}

// GetUpdatedAt is get updated_at value, if receiver is nil, returns the specified value.
func (m *UserAuthCredentialBase) GetUpdatedAt() types.UnixTime {
	if m == nil {
		return types.UnixTime(0)
	}
	return m.UpdatedAt
}
