// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"qM3U/h8AAP//5P17Mv9FAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
