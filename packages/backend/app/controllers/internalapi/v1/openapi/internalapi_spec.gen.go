// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
