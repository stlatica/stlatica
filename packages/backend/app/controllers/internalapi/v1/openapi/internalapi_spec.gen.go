// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"dGrp/wEAAP//6fGkmGdNAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
