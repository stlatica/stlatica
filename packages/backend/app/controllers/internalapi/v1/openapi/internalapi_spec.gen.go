// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"l04v/S8AAP//0oOtKhdQAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
