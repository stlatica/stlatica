// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.4 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xZbW8TyxX+K6tpJVrVjtfBScHfDDHUUnBSJ+ZDcWRN1hNn6b51ZjZNGkXKrguNCAhE",
	"CQGJipbykjbgVkJt6c19+TETO+RfXM3srt92EojIRVfIUj5k98yceeac8zxzdrwKNNt0bAtZlIDsKnAg",
	"hiaiCAdPBqRVvcb/rSGiYd2hum2BrDAw//77N49aGy+Y95j5m8x7ynyPec39d+vtP95lXrMwUbFAAqBl",
	"aDoGCmdxdwmgCyeQLoIEsKDZb8Tod66OUQ1kKXZRAhBtEZmQg6ArDh9KKNatOlhbSwCqm8jQLSRFGRlP",
	"jrTXrRRt/4CTIHYJwlK03HBypJE7Kcqu8eMRrkVGUQF5jG1cQsSxLYJESWDbQZjqSJg1uybeIss1QfYa",
	"uJCbqJbyvy7nZ2ZBAlwpzMwUiper07lS7kp+Nl8CCVAu5sqzv5oqFX6TnwAJUJyarV6aKhf5/4XibL5U",
	"zE1WZ/Klq/lSNV8qTfEp/LFwMV8tF3NXc4XJ3IXJPJjrjcFREwe2lgAmIgTWA8Sd2YhvUYlMCUnKusG7",
	"Fuy462muM96ev440yleZNiCVUwYkYvGzKLKOGM28ZvvJ6/bDP/UlnHl/Zv5t5v2L+f9hjbessc0au8xr",
	"BjNe8cJZ92Wb1zCCFNWq8Mjlbu9/86S9cY95W2KFp+3tF+3H/s8KM1PnxtX0z/tgjKqjmaSaTqrpWVXN",
	"ir9fqOezqgoSYMHGJl8F1CBFSU4VGR7dhPUgCjIsu+3/7e3vPepgOXiw12pwBpRLk7zYKTJJfx4XKXVI",
	"NpVaXl5O6RZF2IJGaimdCtZJpWUYwhcQY7jCn3sE76cYLYAs+EmqK5CpkBgpnuHCRKw2uhIW5bUv6kfV",
	"SmHitAR2bExF5zKqmkSj5+eTmXQtk4S/TI8nM5nx8bGxTEZVRX5iYeAopm3yY6zaHrk8LiNlgrAkI908",
	"RH5kSeCT5Xoc2/qCbRj27xEmVc12ZSGIBrS3/t0bgFG1sy6vzTrCfOFgsG7Vj/emW/WPcqdrfNKgD9Z4",
	"yRpfM/+/zGsy/xnznzP/LWu8HWCUnEhoOUYkIsZVoUZtPOJYdSm3SdVx5w1di8Np3Xh9+HBTANll/ktR",
	"DBuiBHxR5JvM+wfzbjJvU6lUKlYEQIGOzrymCS0XGsZKznGwvYTIpSgfzNtp3bu9/26dec3W+nPm7TDv",
	"n8zf7GdIcPiFcOdt20DQ4niJa5oQr3wgeLxo37DGFvP/zl82dvvC1huXU6jkYEJwkA+iOniwd/iXZ/vv",
	"bjFv9/3fdg6efxXqpL/ZAdy6d+cE8AZ4020cOiC6QQoLLREjQ7ygeyvhKObJ5O9TeyFJU6NbC3Z8IUIN",
	"SHUNKtGJweuMO9BpELXQXo3s1cC+hDAJPKgj6RGV78V2kMWNWXB2RB05y6UD0kWhGn3nEZe8oLuWKi7X",
	"YYWPGQHCJ4bcUKiFpulAkHmyEKEX7NrKgCJDxzF0TUxKXSeBIHS7vQ+dauIUEPHqR9W+tXWw813r5o1W",
	"8/9AFEvQEoqNjKrp+D4uBgffCB+dUdVTQ9nfkUqgzsOaEoYnUBDR3/G+LVuxksqZnh71jHgRa1PPVKwA",
	"tWRbrgVdumhj/Q+oJnXf2+B2HGU+3/YtmyoLtmvJ0XX67RDa2OfMTIdjBOElhJUAnAymtKPvQD77+SBz",
	"pLqGFNeCS1A34LyBpIAl3ygCbu/Z0k9tCuuES60g9BwfGFeJ1GrYUq4FhWggKjkNJsT7IzQjMIaq0ft1",
	"f00eme6QVNTOrs3F+J6JoyjaSpiSIeWHlB9SPqB8DzeV+RWlMCGhfgLUkaQRKCHqYoscwevLiJ42qdVT",
	"7SSkoXU1DREy1IehPgz1QejDZUSPF4fBviC6eCap1Z47aNEfSFWkjqgSDVQqlWAxvca85uHjO4d/vcm8",
	"V+GtzeGNO62Nbebfb9192Pp2O/jqkunObOjuxNrTe2n+yfrTuQH8sBAN3vN9kcI01JOhnvTTvUdMOpSN",
	"C4pLODVXw7uT44UkvBKNKUI5vCo9kRpEtzU/aCcikA0JPyT8l0z4kJYR2UXNzwW/5IqgBHQc+KkG68RU",
	"TFv7bRg5kAAuNsLr/2wqZdgaNBZtQrMZNa2Ctbm17wMAAP//aOC7miwgAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
